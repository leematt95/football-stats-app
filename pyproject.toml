[tool.black]
# Black configuration for consistent code formatting
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | \.pytest_cache
  | pgdata
  | migrations
  | app_standalone_backup\.py
)/
'''

# Skip string normalization (preserve quote style)
skip-string-normalization = false

# Enable preview features
preview = false

[tool.isort]
# Import sorting configuration to work with black
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Known sections
known_first_party = ["app"]
known_third_party = ["flask", "sqlalchemy", "psycopg2", "dotenv", "understat", "aiohttp"]

# Exclude files
skip = [
    "venv",
    ".venv", 
    "__pycache__",
    "migrations",
    "app_standalone_backup.py"
]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["test_api_pytest.py"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
# Coverage configuration
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
# Coverage reporting
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]